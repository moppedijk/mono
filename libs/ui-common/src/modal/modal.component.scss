@use "../../../ui-base/src/tokens/colors";
@use "../../../ui-base/src/tokens/border-radius";
@use "../../../ui-base/src/tokens/box-shadow";
@use "../../../ui-base/src/tokens/units";
@use "../../../ui-base/src/tokens/viewport";
@use "../../../ui-base/src/tools/breakpoint";

.modal {
    position: fixed;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	background-color: colors.$color-dark;
    z-index: 100;
    opacity: 0; // initial animation state
	animation-name: fade-in;
	animation-duration: .3s;
	animation-fill-mode: forwards;

	@include breakpoint.breakpoint('large') {
		background-color: rgba(colors.$color-light, .5);
	}
}

.modal__container {
    background-color: colors.$color-dark;
    transform: scale(0); // initial animation state
	animation: scale-in .3s .3s;
	animation-name: scale-in;
	animation-duration: .3s;
	animation-fill-mode: forwards;
	margin: 0;
	display: flex;
	flex-direction: column;

	@include breakpoint.breakpoint('large') {
		border-radius: border-radius.$border-radius;
		box-shadow: box-shadow.$box-shadow;
		margin: units.$unit-large auto;
		max-width: viewport.$large;
		width: 100%;
    }
}

.modal__header {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: units.$unit-large;
    background-color: darken(colors.$color-dark, 10%);
	color: colors.$color-light;

	@include breakpoint.breakpoint('large') {
		border-top-left-radius: units.$unit-large; 
    	border-top-right-radius: units.$unit-large;
	}
}

.modal__title {
    flex: 1;
}

.modal__close {
    flex: 1;
    text-align: right;
}

.modal__close ::ng-deep button {
    margin: 0;
}

.modal__content {
	margin: units.$unit-default;
	overflow-y: scroll;
}

// TODO: Move to more generic place
@keyframes fade-in {
	0% {
		opacity: 0;
	}

	100% {
		opacity: 1;
	}
}

@keyframes scale-in {
	0% {
		transform: scale(0);
	}

	100% {
		transform: scale(1);
	}
}

@keyframes bounce {

	0% {
		transform: scaleX(1) scaleY(1);
	}
	
	86% {
		transform: scaleX(1) scaleY(1);
	}

	90% {
		transform: scaleX(.85) scaleY(.85);
	}
	
	92% {
		transform: scaleX(1.1) scaleY(1.1);
	}

	94% {
		transform: scaleX(.9) scaleY(.9);
	}

	96% {
		transform: scaleX(1.05) scaleY(1.05);
	}

	98% {
		transform: scaleX(.95) scaleY(.95);
	}

	100% {
		transform: scaleX(1) scaleY(1);
	}
}